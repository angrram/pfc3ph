var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"ctrl_ez","ref":true,"files":[{"name":"ctrl_ez.c","type":"source","group":"model","path":"C:\\Users\\Angel\\Desktop\\hil\\pfc3ph\\stf7\\matlab\\ctrl_ez\\ARMCortex-M\\_ref\\ctrl_ez","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: ctrl_ez.c\r\n *\r\n * Code generated for Simulink model 'ctrl_ez'.\r\n *\r\n * Model version                  : 1.643\r\n * Simulink Coder version         : 24.2 (R2024b) 21-Jun-2024\r\n * C/C++ source code generated on : Sun May 11 12:39:25 2025\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objective: Execution efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"ctrl_ez.h\"\r\n#include <stdbool.h>\r\n#include \"ctrl_ez_private.h\"\r\n#include <math.h>\r\n#include <stdint.h>\r\n#include \"plook_u32ff_evenc.h\"\r\n#include \"intrp1d_fu32fl.h\"\r\n\r\n/* Exported block states */\r\nfloat filter_IA;                       /* 'Data Store Memory' (':2047') */\r\nfloat filter_IB;                       /* 'Data Store Memory1' (':2049') */\r\nfloat filter_IC;                       /* 'Data Store Memory2' (':2051') */\r\n\r\n/* Block states (default storage) */\r\nDW_ctrl_ez_f_T ctrl_ez_DW;\r\n\r\n/*\r\n * Output and update for action system:\r\n *    'If Action Subsystem' (':2053:76:684')\r\n *    'If Action Subsystem' (':2056:76:684')\r\n */\r\nvoid ctrl_ez_IfActionSubsystem(float rtu_In1, float *rty_Out1)\r\n{\r\n  /* Sum: 'Sum' (':2053:76:693') incorporates:\r\n   *  DataTypeConversion: 'Convert_back' (':2053:76:695')\r\n   *  DataTypeConversion: 'Convert_uint16' (':2053:76:694')\r\n   */\r\n  *rty_Out1 = rtu_In1 - (float)(int16_t)(float)floor(rtu_In1);\r\n}\r\n\r\n/*\r\n * Output and update for action system:\r\n *    'If Action Subsystem1' (':2053:76:688')\r\n *    'If Action Subsystem1' (':2056:76:688')\r\n */\r\nvoid ctrl_ez_IfActionSubsystem1(float rtu_In1, float *rty_Out1)\r\n{\r\n  /* Sum: 'Sum' (':2053:76:700') incorporates:\r\n   *  DataTypeConversion: 'Convert_back' (':2053:76:698')\r\n   *  DataTypeConversion: 'Convert_uint16' (':2053:76:697')\r\n   */\r\n  *rty_Out1 = rtu_In1 - (float)(int16_t)rtu_In1;\r\n}\r\n\r\n/* System initialize for referenced model: 'ctrl_ez' */\r\nvoid ctrl_ez_Init(float *rty_Qa)\r\n{\r\n  /* SystemInitialize for RootInportFunctionCallGenerator generated from: 'trigger_ctrl_ez' (':21') incorporates:\r\n   *  SubSystem: 'ctrl_ez_fcn' (':498')\r\n   */\r\n  /* InitializeConditions for Memory: 'Memory' (':561') */\r\n  ctrl_ez_DW.Memory_PreviousInput = true;\r\n\r\n  /* SystemInitialize for Enabled SubSystem: 'ctrl' (':1270') */\r\n  /* InitializeConditions for DiscreteIntegrator: 'Accumulator' (':1396') */\r\n  ctrl_ez_DW.Accumulator_PrevResetState = 2;\r\n\r\n  /* End of SystemInitialize for SubSystem: 'ctrl' (':1270') */\r\n\r\n  /* SystemInitialize for SignalConversion generated from: 'Qa' (':570') */\r\n  *rty_Qa = ctrl_ez_DW.T2[0];\r\n\r\n  /* End of SystemInitialize for RootInportFunctionCallGenerator generated from: 'trigger_ctrl_ez' (':21') */\r\n}\r\n\r\n/* Output and update for referenced model: 'ctrl_ez' */\r\nvoid ctrl_ez_trigger_ctrl_ez(const float *rtu_ia, const float *rtu_ib, const\r\n  float *rtu_ic, const float *rtu_ov_out, const float *rtu_w, const float\r\n  *rtu_lock_pll, const float *rtu_sine, const float *rtu_cos, const float\r\n  *rtu_va, const float *rtu_vc, const float *rtu_vb, float *rty_Qa, float\r\n  *rty_Qb, float *rty_Qc, bool *rty_lock)\r\n{\r\n  float rtb_Gain_0[3];\r\n  float rtb_Add1_idx_0;\r\n  float rtb_Add1_idx_1;\r\n  float rtb_Add1_idx_2;\r\n  float rtb_Gain;\r\n  float rtb_Gain1_l;\r\n  float rtb_Kalphabeta0_d_idx_0;\r\n  float rtb_Kalphabeta0_d_idx_1;\r\n  float rtb_Kalphabeta0_idx_0;\r\n  float rtb_Sum4_i;\r\n  float rtb_Switch;\r\n  float rtb_Switch1_idx_0;\r\n  float rtb_vd_ctrl;\r\n  float rtb_vq_park_o;\r\n  int32_t rtb_Accumulator_o2;\r\n  int32_t y;\r\n  uint32_t bpIdx;\r\n  uint8_t quadrantInfo;\r\n  bool isReciprocal;\r\n  static const float tableData_c[16] = { 0.0F, 0.010594652F, 0.0210962314F,\r\n    0.0314164795F, 0.0414761603F, 0.0512081906F, 0.0605594702F, 0.0694913715F,\r\n    0.0779791325F, 0.0860104337F, 0.0935835242F, 0.100705102F, 0.107388355F,\r\n    0.113651067F, 0.11951407F, 0.125F };\r\n\r\n  /* RootInportFunctionCallGenerator generated from: 'trigger_ctrl_ez' (':21') incorporates:\r\n   *  SubSystem: 'ctrl_ez_fcn' (':498')\r\n   */\r\n  /* Sum: 'Add1' (':831:360') incorporates:\r\n   *  Product: 'Product' (':831:364')\r\n   *  Product: 'Product1' (':831:365')\r\n   *  UnitDelay: 'Unit Delay' (':831:366')\r\n   */\r\n  rtb_Add1_idx_0 = *rtu_ia * 0.1F + ctrl_ez_DW.UnitDelay_DSTATE[0] * 0.9F;\r\n  rtb_Add1_idx_1 = *rtu_ib * 0.1F + 0.9F * ctrl_ez_DW.UnitDelay_DSTATE[1];\r\n  rtb_Add1_idx_2 = *rtu_ic * 0.1F + 0.9F * ctrl_ez_DW.UnitDelay_DSTATE[2];\r\n\r\n  /* DataStoreWrite: 'Data Store Write' (':2046') */\r\n  filter_IA = rtb_Add1_idx_0;\r\n\r\n  /* DataStoreWrite: 'Data Store Write1' (':2048') */\r\n  filter_IB = rtb_Add1_idx_1;\r\n\r\n  /* DataStoreWrite: 'Data Store Write2' (':2050') */\r\n  filter_IC = rtb_Add1_idx_2;\r\n\r\n  /* Switch: 'Switch' (':562') incorporates:\r\n   *  Constant: 'Pi1' (':1837')\r\n   *  Logic: 'AND' (':1985')\r\n   *  Memory: 'Memory' (':561')\r\n   *  RelationalOperator: 'Equal' (':1807')\r\n   */\r\n  *rty_lock = (((*rtu_w <= 0.0F) || (*rtu_lock_pll == 0.0F)) &&\r\n               ctrl_ez_DW.Memory_PreviousInput);\r\n\r\n  /* Gain: 'Kalphabeta0' (':2058:641') incorporates:\r\n   *  Gain: 'one_by_3' (':2058:648')\r\n   *  Gain: 'one_by_sqrt3_' (':2058:649')\r\n   *  Sum: 'Sum' (':2058:644')\r\n   *  Sum: 'Sum1' (':2058:645')\r\n   *  Sum: 'Sum2' (':2058:646')\r\n   */\r\n  rtb_Kalphabeta0_idx_0 = (*rtu_va - ((*rtu_va + *rtu_vb) + *rtu_vc) *\r\n    0.333333343F) * 1.22474492F;\r\n  rtb_Switch1_idx_0 = (*rtu_vb - *rtu_vc) * 0.577350259F * 1.22474492F;\r\n\r\n  /* Outputs for Enabled SubSystem: 'ctrl' (':1270') incorporates:\r\n   *  EnablePort: 'Enable' (':1272')\r\n   */\r\n  /* Logic: 'NOT' (':591') */\r\n  if (!*rty_lock) {\r\n    /* Gain: 'Kalphabeta0' (':1278:641') incorporates:\r\n     *  Gain: 'one_by_3' (':1278:648')\r\n     *  Gain: 'one_by_sqrt3_' (':1278:649')\r\n     *  Sum: 'Sum' (':1278:644')\r\n     *  Sum: 'Sum1' (':1278:645')\r\n     *  Sum: 'Sum2' (':1278:646')\r\n     */\r\n    rtb_Kalphabeta0_d_idx_0 = (rtb_Add1_idx_0 - ((rtb_Add1_idx_0 +\r\n      rtb_Add1_idx_1) + rtb_Add1_idx_2) * 0.333333343F) * 1.22474492F;\r\n    rtb_Kalphabeta0_d_idx_1 = (rtb_Add1_idx_1 - rtb_Add1_idx_2) * 0.577350259F *\r\n      1.22474492F;\r\n\r\n    /* MATLAB Function: 'park_tf' (':2017') */\r\n    rtb_vq_park_o = *rtu_sine * rtb_Kalphabeta0_d_idx_1 + *rtu_cos *\r\n      rtb_Kalphabeta0_d_idx_0;\r\n    rtb_Kalphabeta0_d_idx_0 = *rtu_sine * rtb_Kalphabeta0_d_idx_0 - *rtu_cos *\r\n      rtb_Kalphabeta0_d_idx_1;\r\n\r\n    /* DiscreteIntegrator: 'Accumulator' (':1374') */\r\n    if (ctrl_ez_DW.Accumulator_DSTATE == 50.0F) {\r\n      rtb_Accumulator_o2 = 1;\r\n    } else if (ctrl_ez_DW.Accumulator_DSTATE == -50.0F) {\r\n      rtb_Accumulator_o2 = -1;\r\n    } else {\r\n      rtb_Accumulator_o2 = 0;\r\n    }\r\n\r\n    /* Sum: 'Add2' (':1375') incorporates:\r\n     *  Constant: 'Constant' (':1324')\r\n     *  DiscreteIntegrator: 'Accumulator' (':1374')\r\n     *  Gain: 'Gain1' (':1378')\r\n     *  Sum: 'Sum1' (':1323')\r\n     */\r\n    rtb_Sum4_i = (650.0F - *rtu_ov_out) * 0.3F + ctrl_ez_DW.Accumulator_DSTATE;\r\n\r\n    /* Saturate: 'Saturation' (':1380') */\r\n    if (rtb_Sum4_i > 50.0F) {\r\n      /* Saturate: 'Saturation' (':1380') */\r\n      ctrl_ez_DW.I_D_CTRL_VDC = 50.0F;\r\n    } else if (rtb_Sum4_i < -50.0F) {\r\n      /* Saturate: 'Saturation' (':1380') */\r\n      ctrl_ez_DW.I_D_CTRL_VDC = -50.0F;\r\n    } else {\r\n      /* Saturate: 'Saturation' (':1380') */\r\n      ctrl_ez_DW.I_D_CTRL_VDC = rtb_Sum4_i;\r\n    }\r\n\r\n    /* End of Saturate: 'Saturation' (':1380') */\r\n\r\n    /* Sum: 'Sum2' (':1328') */\r\n    rtb_Kalphabeta0_d_idx_1 = ctrl_ez_DW.I_D_CTRL_VDC - rtb_Kalphabeta0_d_idx_0;\r\n\r\n    /* Switch: 'Switch' (':1934') incorporates:\r\n     *  Constant: 'Constant' (':1935')\r\n     *  Delay: 'Delay' (':1933')\r\n     *  Gain: 'Gain2' (':1390')\r\n     */\r\n    if (ctrl_ez_DW.Delay_DSTATE[0U] > 0.0F) {\r\n      rtb_vd_ctrl = 0.0F;\r\n    } else {\r\n      rtb_vd_ctrl = 0.0769230798F * rtb_Kalphabeta0_d_idx_1;\r\n    }\r\n\r\n    /* DiscreteIntegrator: 'Accumulator' (':1385') incorporates:\r\n     *  Switch: 'Switch' (':1934')\r\n     */\r\n    rtb_Switch = ctrl_ez_DW.Accumulator_DSTATE_a + rtb_vd_ctrl;\r\n\r\n    /* DiscreteIntegrator: 'Accumulator' (':1385') */\r\n    if (rtb_Switch > 100.0F) {\r\n      /* DiscreteIntegrator: 'Accumulator' (':1385') */\r\n      rtb_Switch = 100.0F;\r\n    } else if (rtb_Switch < -100.0F) {\r\n      /* DiscreteIntegrator: 'Accumulator' (':1385') */\r\n      rtb_Switch = -100.0F;\r\n    }\r\n\r\n    /* Sum: 'Sum3' (':1332') incorporates:\r\n     *  Gain: 'Gain1' (':1389')\r\n     *  Gain: 'Gain' (':1333')\r\n     *  MATLAB Function: 'park_tf' (':2016')\r\n     *  Sum: 'Add2' (':1386')\r\n     */\r\n    rtb_vd_ctrl = ((*rtu_sine * rtb_Kalphabeta0_idx_0 - *rtu_cos *\r\n                    rtb_Switch1_idx_0) + 0.0471238904F * rtb_vq_park_o) - (10.0F\r\n      * rtb_Kalphabeta0_d_idx_1 + rtb_Switch);\r\n\r\n    /* Sum: 'Sum4' (':1336') incorporates:\r\n     *  Constant: 'Constant1' (':1337')\r\n     */\r\n    rtb_Sum4_i = 0.0F - rtb_vq_park_o;\r\n\r\n    /* Gain: 'Gain1' (':1400') incorporates:\r\n     *  Constant: 'Constant1' (':1337')\r\n     *  Sum: 'Sum4' (':1336')\r\n     */\r\n    rtb_Gain1_l = (0.0F - rtb_vq_park_o) * 10.0F;\r\n\r\n    /* Delay: 'Delay1' (':1399') */\r\n    rtb_vq_park_o = ctrl_ez_DW.Delay1_DSTATE;\r\n\r\n    /* Switch: 'Switch' (':1403') incorporates:\r\n     *  Constant: 'Constant1' (':1398')\r\n     *  Delay: 'Delay1' (':1399')\r\n     */\r\n    if (ctrl_ez_DW.Delay1_DSTATE > 0.0F) {\r\n      rtb_Sum4_i = 0.0F;\r\n    }\r\n\r\n    /* End of Switch: 'Switch' (':1403') */\r\n\r\n    /* DiscreteIntegrator: 'Accumulator' (':1396') incorporates:\r\n     *  Delay: 'Delay1' (':1399')\r\n     */\r\n    if ((ctrl_ez_DW.Delay1_DSTATE > 0.0F) &&\r\n        (ctrl_ez_DW.Accumulator_PrevResetState <= 0)) {\r\n      ctrl_ez_DW.Accumulator_DSTATE_p = 0.0F;\r\n    }\r\n\r\n    /* DiscreteIntegrator: 'Accumulator' (':1396') incorporates:\r\n     *  Gain: 'Gain2' (':1401')\r\n     */\r\n    rtb_Kalphabeta0_d_idx_1 = 0.0769230798F * rtb_Sum4_i +\r\n      ctrl_ez_DW.Accumulator_DSTATE_p;\r\n\r\n    /* DiscreteIntegrator: 'Accumulator' (':1396') */\r\n    if (rtb_Kalphabeta0_d_idx_1 > 500.0F) {\r\n      /* DiscreteIntegrator: 'Accumulator' (':1396') */\r\n      rtb_Kalphabeta0_d_idx_1 = 500.0F;\r\n    } else if (rtb_Kalphabeta0_d_idx_1 < -500.0F) {\r\n      /* DiscreteIntegrator: 'Accumulator' (':1396') */\r\n      rtb_Kalphabeta0_d_idx_1 = -500.0F;\r\n    }\r\n\r\n    /* Sum: 'Sum5' (':1341') incorporates:\r\n     *  Gain: 'Gain1' (':1342')\r\n     *  MATLAB Function: 'park_tf' (':2016')\r\n     *  Sum: 'Add2' (':1397')\r\n     */\r\n    rtb_Sum4_i = ((*rtu_sine * rtb_Switch1_idx_0 + *rtu_cos *\r\n                   rtb_Kalphabeta0_idx_0) - 0.0471238904F *\r\n                  rtb_Kalphabeta0_d_idx_0) - (rtb_Gain1_l +\r\n      rtb_Kalphabeta0_d_idx_1);\r\n\r\n    /* MATLAB Function: 'mine_invpark_tf' (':2020') */\r\n    rtb_Kalphabeta0_idx_0 = *rtu_cos * *rtu_cos + *rtu_sine * *rtu_sine;\r\n    rtb_Kalphabeta0_d_idx_0 = -(*rtu_cos * rtb_vd_ctrl - *rtu_sine * rtb_Sum4_i)\r\n      / rtb_Kalphabeta0_idx_0;\r\n    rtb_vd_ctrl = (*rtu_cos * rtb_Sum4_i + *rtu_sine * rtb_vd_ctrl) /\r\n      rtb_Kalphabeta0_idx_0;\r\n\r\n    /* Outputs for Atomic SubSystem: 'atan2' (':2028') */\r\n    /* Trigonometry: 'Atan2' (':2028:325') */\r\n    if ((rtb_vd_ctrl == 0.0F) && (rtb_Kalphabeta0_d_idx_0 == 0.0F)) {\r\n      rtb_Gain = 0.0F;\r\n    } else {\r\n      isReciprocal = false;\r\n      if (rtb_Kalphabeta0_d_idx_0 < 0.0F) {\r\n        if (rtb_vd_ctrl < 0.0F) {\r\n          quadrantInfo = 3U;\r\n        } else {\r\n          quadrantInfo = 4U;\r\n        }\r\n      } else if (rtb_vd_ctrl < 0.0F) {\r\n        quadrantInfo = 2U;\r\n      } else {\r\n        quadrantInfo = 1U;\r\n      }\r\n\r\n      rtb_Gain1_l = (float)fabs(rtb_vd_ctrl);\r\n      rtb_Gain = (float)fabs(rtb_Kalphabeta0_d_idx_0);\r\n      if (rtb_Gain > rtb_Gain1_l) {\r\n        rtb_Sum4_i = rtb_Gain;\r\n        rtb_Gain = rtb_Gain1_l;\r\n        isReciprocal = true;\r\n      } else {\r\n        rtb_Sum4_i = rtb_Gain1_l;\r\n      }\r\n\r\n      bpIdx = plook_u32ff_evenc(rtb_Gain / rtb_Sum4_i, 0.0F, 0.0666666701F, 15U,\r\n        &rtb_Gain1_l);\r\n      rtb_Gain = intrp1d_fu32fl(bpIdx, rtb_Gain1_l, tableData_c);\r\n      if (isReciprocal) {\r\n        rtb_Gain = 0.25F - rtb_Gain;\r\n      }\r\n\r\n      if (quadrantInfo == 2) {\r\n        rtb_Gain = 0.5F - rtb_Gain;\r\n      } else if (quadrantInfo == 3) {\r\n        rtb_Gain -= 0.5F;\r\n      } else if (quadrantInfo == 4) {\r\n        rtb_Gain = -rtb_Gain;\r\n      }\r\n    }\r\n\r\n    rtb_Gain *= 6.28318548F;\r\n\r\n    /* End of Trigonometry: 'Atan2' (':2028:325') */\r\n\r\n    /* MATLAB Function: 'mod_fcn' (':2052') incorporates:\r\n     *  AlgorithmDescriptorDelegate generated from: 'a16' (':2028:305')\r\n     */\r\n    rtb_Gain -= (float)floor(rtb_Gain / 6.28318548F) * 6.28318548F;\r\n\r\n    /* End of Outputs for SubSystem: 'atan2' (':2028') */\r\n\r\n    /* MATLAB Function: 'sector_selection' (':1809') */\r\n    if ((rtb_Gain >= 0.0F) && (rtb_Gain < 1.04719758F)) {\r\n      y = 0;\r\n      isReciprocal = true;\r\n    } else if ((rtb_Gain >= 1.04719758F) && (rtb_Gain < 2.09439516F)) {\r\n      y = 1;\r\n      isReciprocal = false;\r\n    } else if ((rtb_Gain >= 2.09439516F) && (rtb_Gain < 3.14159274F)) {\r\n      y = 2;\r\n      isReciprocal = true;\r\n    } else if ((rtb_Gain >= 3.14159274F) && (rtb_Gain < 4.18879032F)) {\r\n      y = 3;\r\n      isReciprocal = false;\r\n    } else if ((rtb_Gain >= 4.18879032F) && (rtb_Gain < 5.23598766F)) {\r\n      y = 4;\r\n      isReciprocal = true;\r\n    } else if ((rtb_Gain >= 5.23598766F) && (rtb_Gain < 6.28318548F)) {\r\n      y = 5;\r\n      isReciprocal = false;\r\n    } else {\r\n      y = 1;\r\n      isReciprocal = false;\r\n    }\r\n\r\n    rtb_Gain -= (float)y * 1.04719758F;\r\n\r\n    /* Gain: 'convert_pu' (':2053:76:652') incorporates:\r\n     *  Constant: 'Constant' (':1789')\r\n     *  Sum: 'Add1' (':1790')\r\n     */\r\n    rtb_Gain1_l = (1.04719758F - rtb_Gain) * 0.159154937F;\r\n\r\n    /* If: 'If' (':2053:76:683') incorporates:\r\n     *  Constant: 'Constant' (':2053:76:692:3')\r\n     *  RelationalOperator: 'Compare' (':2053:76:692:2')\r\n     */\r\n    if (rtb_Gain1_l < 0.0F) {\r\n      /* Outputs for IfAction SubSystem: 'If Action Subsystem' (':2053:76:684') incorporates:\r\n       *  ActionPort: 'Action Port' (':2053:76:686')\r\n       */\r\n      ctrl_ez_IfActionSubsystem(rtb_Gain1_l, &rtb_Sum4_i);\r\n\r\n      /* End of Outputs for SubSystem: 'If Action Subsystem' (':2053:76:684') */\r\n    } else {\r\n      /* Outputs for IfAction SubSystem: 'If Action Subsystem1' (':2053:76:688') incorporates:\r\n       *  ActionPort: 'Action Port' (':2053:76:690')\r\n       */\r\n      ctrl_ez_IfActionSubsystem1(rtb_Gain1_l, &rtb_Sum4_i);\r\n\r\n      /* End of Outputs for SubSystem: 'If Action Subsystem1' (':2053:76:688') */\r\n    }\r\n\r\n    /* End of If: 'If' (':2053:76:683') */\r\n\r\n    /* Gain: 'indexing' (':2053:76:605') */\r\n    rtb_Sum4_i *= 800.0F;\r\n\r\n    /* DataTypeConversion: 'Data Type Conversion1' (':2053:76:653') incorporates:\r\n     *  DataTypeConversion: 'Get_Integer' (':2053:76:608')\r\n     */\r\n    rtb_Gain1_l = (uint16_t)rtb_Sum4_i;\r\n\r\n    /* Selector: 'Lookup' (':2053:76:557') incorporates:\r\n     *  Constant: 'sine_table_values' (':2053:76:549')\r\n     *  DataTypeConversion: 'Get_Integer' (':2053:76:608')\r\n     */\r\n    rtb_Switch1_idx_0 = rtCP_sine_table_values_Value[(uint16_t)rtb_Sum4_i];\r\n\r\n    /* Sum: 'Sum4' (':2053:76:615') incorporates:\r\n     *  Constant: 'offset' (':2053:76:657')\r\n     *  Constant: 'sine_table_values' (':2053:76:549')\r\n     *  DataTypeConversion: 'Data Type Conversion1' (':2053:76:653')\r\n     *  DataTypeConversion: 'Get_Integer' (':2053:76:608')\r\n     *  Product: 'Product' (':2053:76:616')\r\n     *  Selector: 'Lookup' (':2053:76:557')\r\n     *  Sum: 'Sum' (':2053:76:610')\r\n     *  Sum: 'Sum2' (':2053:76:612')\r\n     *  Sum: 'Sum3' (':2053:76:614')\r\n     */\r\n    rtb_Sum4_i = (rtCP_sine_table_values_Value[(int32_t)((uint16_t)rtb_Sum4_i +\r\n      1U)] - rtb_Switch1_idx_0) * (rtb_Sum4_i - (float)(uint16_t)rtb_Sum4_i) +\r\n      rtb_Switch1_idx_0;\r\n\r\n    /* Gain: 'convert_pu' (':2056:76:652') */\r\n    rtb_Gain *= 0.159154937F;\r\n\r\n    /* If: 'If' (':2056:76:683') incorporates:\r\n     *  Constant: 'Constant' (':2056:76:692:3')\r\n     *  RelationalOperator: 'Compare' (':2056:76:692:2')\r\n     */\r\n    if (rtb_Gain < 0.0F) {\r\n      /* Outputs for IfAction SubSystem: 'If Action Subsystem' (':2056:76:684') incorporates:\r\n       *  ActionPort: 'Action Port' (':2056:76:686')\r\n       */\r\n      ctrl_ez_IfActionSubsystem(rtb_Gain, &rtb_Gain1_l);\r\n\r\n      /* End of Outputs for SubSystem: 'If Action Subsystem' (':2056:76:684') */\r\n    } else {\r\n      /* Outputs for IfAction SubSystem: 'If Action Subsystem1' (':2056:76:688') incorporates:\r\n       *  ActionPort: 'Action Port' (':2056:76:690')\r\n       */\r\n      ctrl_ez_IfActionSubsystem1(rtb_Gain, &rtb_Gain1_l);\r\n\r\n      /* End of Outputs for SubSystem: 'If Action Subsystem1' (':2056:76:688') */\r\n    }\r\n\r\n    /* End of If: 'If' (':2056:76:683') */\r\n\r\n    /* Gain: 'indexing' (':2056:76:605') */\r\n    rtb_Gain1_l *= 800.0F;\r\n\r\n    /* Sqrt: 'Sqrt' (':2027') incorporates:\r\n     *  Product: 'Product' (':2024')\r\n     *  Product: 'Product1' (':2025')\r\n     *  Sum: 'Add' (':2026')\r\n     */\r\n    rtb_vd_ctrl = (float)sqrt(rtb_vd_ctrl * rtb_vd_ctrl +\r\n      rtb_Kalphabeta0_d_idx_0 * rtb_Kalphabeta0_d_idx_0);\r\n\r\n    /* Sum: 'Add1' (':1981:360') incorporates:\r\n     *  Product: 'Product' (':1981:364')\r\n     *  Product: 'Product1' (':1981:365')\r\n     *  UnitDelay: 'Unit Delay' (':1981:366')\r\n     */\r\n    rtb_Kalphabeta0_d_idx_0 = *rtu_ov_out * 0.01F + 0.99F *\r\n      ctrl_ez_DW.UnitDelay_DSTATE_f;\r\n\r\n    /* Saturate: 'Saturation3' (':1853') */\r\n    if (rtb_Kalphabeta0_d_idx_0 > 2000.0F) {\r\n      rtb_Gain = 2000.0F;\r\n    } else if (rtb_Kalphabeta0_d_idx_0 < 100.0F) {\r\n      rtb_Gain = 100.0F;\r\n    } else {\r\n      rtb_Gain = rtb_Kalphabeta0_d_idx_0;\r\n    }\r\n\r\n    /* End of Saturate: 'Saturation3' (':1853') */\r\n\r\n    /* Product: 'Divide1' (':1795') incorporates:\r\n     *  Constant: 'Constant1' (':1792')\r\n     */\r\n    rtb_Switch1_idx_0 = rtb_Sum4_i * rtb_vd_ctrl * 1.73205078F / rtb_Gain;\r\n\r\n    /* Saturate: 'Saturation' (':1823') */\r\n    if (rtb_Switch1_idx_0 > 1.0F) {\r\n      rtb_Switch1_idx_0 = 1.0F;\r\n    } else if (rtb_Switch1_idx_0 < 0.0F) {\r\n      rtb_Switch1_idx_0 = 0.0F;\r\n    }\r\n\r\n    /* Selector: 'Lookup' (':2056:76:557') incorporates:\r\n     *  Constant: 'sine_table_values' (':2056:76:549')\r\n     *  DataTypeConversion: 'Get_Integer' (':2056:76:608')\r\n     */\r\n    rtb_Kalphabeta0_idx_0 = rtCP_sine_table_values_Value_d[(uint16_t)rtb_Gain1_l];\r\n\r\n    /* Product: 'Divide1' (':1795') incorporates:\r\n     *  Constant: 'Constant1' (':1792')\r\n     *  Constant: 'offset' (':2056:76:657')\r\n     *  Constant: 'sine_table_values' (':2056:76:549')\r\n     *  DataTypeConversion: 'Data Type Conversion1' (':2056:76:653')\r\n     *  DataTypeConversion: 'Get_Integer' (':2056:76:608')\r\n     *  Product: 'Product' (':2056:76:616')\r\n     *  Selector: 'Lookup' (':2056:76:557')\r\n     *  Sum: 'Sum' (':2056:76:610')\r\n     *  Sum: 'Sum2' (':2056:76:612')\r\n     *  Sum: 'Sum3' (':2056:76:614')\r\n     *  Sum: 'Sum4' (':2056:76:615')\r\n     */\r\n    rtb_vd_ctrl = ((rtCP_sine_table_values_Value_d[(int32_t)((uint16_t)\r\n      rtb_Gain1_l + 1U)] - rtb_Kalphabeta0_idx_0) * (rtb_Gain1_l - (float)\r\n      (uint16_t)rtb_Gain1_l) + rtb_Kalphabeta0_idx_0) * rtb_vd_ctrl *\r\n      1.73205078F / rtb_Gain;\r\n\r\n    /* Saturate: 'Saturation' (':1823') */\r\n    if (rtb_vd_ctrl > 1.0F) {\r\n      rtb_vd_ctrl = 1.0F;\r\n    } else if (rtb_vd_ctrl < 0.0F) {\r\n      rtb_vd_ctrl = 0.0F;\r\n    }\r\n\r\n    /* Sum: 'Sum of Elements' (':1941') */\r\n    rtb_Sum4_i = rtb_Switch1_idx_0 + rtb_vd_ctrl;\r\n\r\n    /* Switch: 'Switch' (':1877') */\r\n    if (isReciprocal) {\r\n      rtb_Kalphabeta0_idx_0 = rtb_Switch1_idx_0;\r\n      rtb_Switch1_idx_0 = rtb_vd_ctrl;\r\n    } else {\r\n      rtb_Kalphabeta0_idx_0 = rtb_vd_ctrl;\r\n    }\r\n\r\n    /* End of Switch: 'Switch' (':1877') */\r\n\r\n    /* Saturate: 'Saturation2' (':1825') incorporates:\r\n     *  Constant: 'Constant2' (':1797')\r\n     *  Sum: 'Add2' (':1799')\r\n     */\r\n    if (1.0F - rtb_Sum4_i < 0.0F) {\r\n      rtb_vd_ctrl = 0.0F;\r\n    } else {\r\n      rtb_vd_ctrl = 1.0F - rtb_Sum4_i;\r\n    }\r\n\r\n    /* Gain: 'Gain' (':1802') incorporates:\r\n     *  Saturate: 'Saturation2' (':1825')\r\n     */\r\n    rtb_Gain = 0.5F * rtb_vd_ctrl;\r\n\r\n    /* Sum: 'Add3' (':1803') */\r\n    rtb_vd_ctrl = rtb_Switch1_idx_0 + rtb_Gain;\r\n\r\n    /* Saturate: 'Saturation4' (':1872') */\r\n    if (rtb_vd_ctrl > 1.0F) {\r\n      rtb_vd_ctrl = 1.0F;\r\n    }\r\n\r\n    /* End of Saturate: 'Saturation4' (':1872') */\r\n\r\n    /* LookupNDDirect: 'Direct Lookup Table (n-D)' (':1813') incorporates:\r\n     *  MATLAB Function: 'sector_selection' (':1809')\r\n     *\r\n     * About 'Direct Lookup Table (n-D)' (':1813'):\r\n     *  2-dimensional Direct Look-Up returning a Column,\r\n     *  which is contiguous for column-major array\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *   */\r\n    y *= 3;\r\n\r\n    /* Sum: 'Add4' (':1804') */\r\n    rtb_Sum4_i = rtb_Kalphabeta0_idx_0 + rtb_vd_ctrl;\r\n\r\n    /* SignalConversion generated from: 'Selector' (':1810') */\r\n    rtb_Gain_0[0] = rtb_Gain;\r\n    rtb_Gain_0[1] = rtb_vd_ctrl;\r\n\r\n    /* Saturate: 'Saturation5' (':1873') */\r\n    if (rtb_Sum4_i > 1.0F) {\r\n      /* SignalConversion generated from: 'Selector' (':1810') */\r\n      rtb_Gain_0[2] = 1.0F;\r\n    } else {\r\n      /* SignalConversion generated from: 'Selector' (':1810') */\r\n      rtb_Gain_0[2] = rtb_Sum4_i;\r\n    }\r\n\r\n    /* End of Saturate: 'Saturation5' (':1873') */\r\n\r\n    /* Saturate: 'Saturation1' (':1937') incorporates:\r\n     *  LookupNDDirect: 'Direct Lookup Table (n-D)' (':1813')\r\n     *  Selector: 'Selector' (':1810')\r\n     *\r\n     * About 'Direct Lookup Table (n-D)' (':1813'):\r\n     *  2-dimensional Direct Look-Up returning a Column,\r\n     *  which is contiguous for column-major array\r\n     *     Remove protection against out-of-range input in generated code: 'on'\r\n     *   */\r\n    rtb_Sum4_i = rtb_Gain_0[(int32_t)rtCP_DirectLookupTablenD_table[y] - 1];\r\n    if (rtb_Sum4_i > 0.97F) {\r\n      /* Saturate: 'Saturation1' (':1937') */\r\n      ctrl_ez_DW.T2[0] = 0.97F;\r\n    } else if (rtb_Sum4_i < 0.03F) {\r\n      /* Saturate: 'Saturation1' (':1937') */\r\n      ctrl_ez_DW.T2[0] = 0.03F;\r\n    } else {\r\n      /* Saturate: 'Saturation1' (':1937') */\r\n      ctrl_ez_DW.T2[0] = rtb_Sum4_i;\r\n    }\r\n\r\n    rtb_Sum4_i = rtb_Gain_0[(int32_t)rtCP_DirectLookupTablenD_table[y + 1] - 1];\r\n    if (rtb_Sum4_i > 0.97F) {\r\n      /* Saturate: 'Saturation1' (':1937') */\r\n      ctrl_ez_DW.T2[1] = 0.97F;\r\n    } else if (rtb_Sum4_i < 0.03F) {\r\n      /* Saturate: 'Saturation1' (':1937') */\r\n      ctrl_ez_DW.T2[1] = 0.03F;\r\n    } else {\r\n      /* Saturate: 'Saturation1' (':1937') */\r\n      ctrl_ez_DW.T2[1] = rtb_Sum4_i;\r\n    }\r\n\r\n    rtb_Sum4_i = rtb_Gain_0[(int32_t)rtCP_DirectLookupTablenD_table[y + 2] - 1];\r\n    if (rtb_Sum4_i > 0.97F) {\r\n      /* Saturate: 'Saturation1' (':1937') */\r\n      ctrl_ez_DW.T2[2] = 0.97F;\r\n    } else if (rtb_Sum4_i < 0.03F) {\r\n      /* Saturate: 'Saturation1' (':1937') */\r\n      ctrl_ez_DW.T2[2] = 0.03F;\r\n    } else {\r\n      /* Saturate: 'Saturation1' (':1937') */\r\n      ctrl_ez_DW.T2[2] = rtb_Sum4_i;\r\n    }\r\n\r\n    /* End of Saturate: 'Saturation1' (':1937') */\r\n\r\n    /* SignalConversion generated from: 'Qb' (':1369') */\r\n    *rty_Qb = ctrl_ez_DW.T2[1];\r\n\r\n    /* SignalConversion generated from: 'Qc' (':1370') */\r\n    *rty_Qc = ctrl_ez_DW.T2[2];\r\n\r\n    /* Switch: 'Switch' (':1381') incorporates:\r\n     *  Constant: 'Constant1' (':1376')\r\n     *  Constant: 'Constant' (':1324')\r\n     *  Delay: 'Delay1' (':1377')\r\n     *  Sum: 'Sum1' (':1323')\r\n     */\r\n    if (ctrl_ez_DW.Delay1_DSTATE_e > 0.0F) {\r\n      rtb_vd_ctrl = 0.0F;\r\n    } else {\r\n      rtb_vd_ctrl = 650.0F - *rtu_ov_out;\r\n    }\r\n\r\n    /* Update for DiscreteIntegrator: 'Accumulator' (':1374') incorporates:\r\n     *  Gain: 'Gain2' (':1379')\r\n     *  Switch: 'Switch' (':1381')\r\n     */\r\n    ctrl_ez_DW.Accumulator_DSTATE += 0.001F * rtb_vd_ctrl;\r\n    if (ctrl_ez_DW.Accumulator_DSTATE > 50.0F) {\r\n      ctrl_ez_DW.Accumulator_DSTATE = 50.0F;\r\n    } else if (ctrl_ez_DW.Accumulator_DSTATE < -50.0F) {\r\n      ctrl_ez_DW.Accumulator_DSTATE = -50.0F;\r\n    }\r\n\r\n    /* End of Update for DiscreteIntegrator: 'Accumulator' (':1374') */\r\n\r\n    /* Update for Delay: 'Delay' (':1933') */\r\n    ctrl_ez_DW.Delay_DSTATE[0] = ctrl_ez_DW.Delay_DSTATE[1];\r\n\r\n    /* DiscreteIntegrator: 'Accumulator' (':1385') */\r\n    if (rtb_Switch == 100.0F) {\r\n      /* Update for Delay: 'Delay' (':1933') */\r\n      ctrl_ez_DW.Delay_DSTATE[1] = 1.0F;\r\n    } else if (rtb_Switch == -100.0F) {\r\n      /* Update for Delay: 'Delay' (':1933') */\r\n      ctrl_ez_DW.Delay_DSTATE[1] = -1.0F;\r\n    } else {\r\n      /* Update for Delay: 'Delay' (':1933') */\r\n      ctrl_ez_DW.Delay_DSTATE[1] = 0.0F;\r\n    }\r\n\r\n    /* Update for DiscreteIntegrator: 'Accumulator' (':1385') */\r\n    ctrl_ez_DW.Accumulator_DSTATE_a = rtb_Switch;\r\n\r\n    /* DiscreteIntegrator: 'Accumulator' (':1396') */\r\n    if (rtb_Kalphabeta0_d_idx_1 == 500.0F) {\r\n      /* Update for Delay: 'Delay1' (':1399') */\r\n      ctrl_ez_DW.Delay1_DSTATE = 1.0F;\r\n    } else if (rtb_Kalphabeta0_d_idx_1 == -500.0F) {\r\n      /* Update for Delay: 'Delay1' (':1399') */\r\n      ctrl_ez_DW.Delay1_DSTATE = -1.0F;\r\n    } else {\r\n      /* Update for Delay: 'Delay1' (':1399') */\r\n      ctrl_ez_DW.Delay1_DSTATE = 0.0F;\r\n    }\r\n\r\n    /* Update for DiscreteIntegrator: 'Accumulator' (':1396') */\r\n    ctrl_ez_DW.Accumulator_DSTATE_p = rtb_Kalphabeta0_d_idx_1;\r\n    if (rtb_vq_park_o > 0.0F) {\r\n      ctrl_ez_DW.Accumulator_PrevResetState = 1;\r\n    } else if (rtb_vq_park_o < 0.0F) {\r\n      ctrl_ez_DW.Accumulator_PrevResetState = -1;\r\n    } else if (rtb_vq_park_o == 0.0F) {\r\n      ctrl_ez_DW.Accumulator_PrevResetState = 0;\r\n    } else {\r\n      ctrl_ez_DW.Accumulator_PrevResetState = 2;\r\n    }\r\n\r\n    /* End of Update for DiscreteIntegrator: 'Accumulator' (':1396') */\r\n\r\n    /* Update for UnitDelay: 'Unit Delay' (':1981:366') */\r\n    ctrl_ez_DW.UnitDelay_DSTATE_f = rtb_Kalphabeta0_d_idx_0;\r\n\r\n    /* Update for Delay: 'Delay1' (':1377') */\r\n    ctrl_ez_DW.Delay1_DSTATE_e = (float)rtb_Accumulator_o2;\r\n  }\r\n\r\n  /* End of Logic: 'NOT' (':591') */\r\n  /* End of Outputs for SubSystem: 'ctrl' (':1270') */\r\n\r\n  /* SignalConversion generated from: 'Qa' (':570') */\r\n  *rty_Qa = ctrl_ez_DW.T2[0];\r\n\r\n  /* Update for UnitDelay: 'Unit Delay' (':831:366') */\r\n  ctrl_ez_DW.UnitDelay_DSTATE[0] = rtb_Add1_idx_0;\r\n  ctrl_ez_DW.UnitDelay_DSTATE[1] = rtb_Add1_idx_1;\r\n  ctrl_ez_DW.UnitDelay_DSTATE[2] = rtb_Add1_idx_2;\r\n\r\n  /* Update for Memory: 'Memory' (':561') */\r\n  ctrl_ez_DW.Memory_PreviousInput = *rty_lock;\r\n\r\n  /* End of Outputs for RootInportFunctionCallGenerator generated from: 'trigger_ctrl_ez' (':21') */\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"ctrl_ez.h","type":"header","group":"model","path":"C:\\Users\\Angel\\Desktop\\hil\\pfc3ph\\stf7\\matlab\\ctrl_ez\\ARMCortex-M\\_ref\\ctrl_ez","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: ctrl_ez.h\r\n *\r\n * Code generated for Simulink model 'ctrl_ez'.\r\n *\r\n * Model version                  : 1.643\r\n * Simulink Coder version         : 24.2 (R2024b) 21-Jun-2024\r\n * C/C++ source code generated on : Sun May 11 12:39:25 2025\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objective: Execution efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef ctrl_ez_h_\r\n#define ctrl_ez_h_\r\n#ifndef ctrl_ez_COMMON_INCLUDES_\r\n#define ctrl_ez_COMMON_INCLUDES_\r\n#include <stdbool.h>\r\n#include <stdint.h>\r\n#endif                                 /* ctrl_ez_COMMON_INCLUDES_ */\r\n\r\n#include \"ctrl_ez_types.h\"\r\n\r\n/*\r\n * Exported States\r\n *\r\n * Note: Exported states are block states with an exported global\r\n * storage class designation.  Code generation will declare the memory for these\r\n * states and exports their symbols.\r\n *\r\n */\r\nextern float filter_IA;                /* 'Data Store Memory' (':2047') */\r\nextern float filter_IB;                /* 'Data Store Memory1' (':2049') */\r\nextern float filter_IC;                /* 'Data Store Memory2' (':2051') */\r\nextern void ctrl_ez_Init(float *rty_Qa);\r\nextern void ctrl_ez_trigger_ctrl_ez(const float *rtu_ia, const float *rtu_ib,\r\n  const float *rtu_ic, const float *rtu_ov_out, const float *rtu_w, const float *\r\n  rtu_lock_pll, const float *rtu_sine, const float *rtu_cos, const float *rtu_va,\r\n  const float *rtu_vc, const float *rtu_vb, float *rty_Qa, float *rty_Qb, float *\r\n  rty_Qc, bool *rty_lock);\r\n\r\n/*-\r\n * These blocks were eliminated from the model due to optimizations:\r\n *\r\n * Block 'Delay' (':869') : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block 'Constant2' (':2070') : Unused code path elimination\r\n * Block 'Gain' (':1968') : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block 'Bias' (':1856') : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block synthesized block : Eliminate redundant data type conversion\r\n * Block synthesized block : Eliminate redundant data type conversion\r\n * Block synthesized block : Eliminate redundant data type conversion\r\n * Block synthesized block : Eliminate redundant data type conversion\r\n * Block synthesized block : Eliminate redundant data type conversion\r\n * Block 'One' (':1981:479') : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block 'UseInputPort' (':1981:484') : Unused code path elimination\r\n * Block 'a' (':1981:844') : Unused code path elimination\r\n * Block 'One' (':831:479') : Unused code path elimination\r\n * Block synthesized block : Unused code path elimination\r\n * Block 'UseInputPort' (':831:484') : Unused code path elimination\r\n * Block 'a' (':831:844') : Unused code path elimination\r\n */\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is 'block_name' ('SID'), where block_name is the name of the block\r\n * and SID is the Simulink identifier of the block without the model name.\r\n *\r\n * Use the MATLAB hilite_system command to trace the generated code back\r\n * to the model.  For example,\r\n *\r\n * hilite_system(':3')    - opens block with Simulink identifier 'model:3'\r\n */\r\n\r\n/*-\r\n * Requirements for model: ctrl_ez\r\n\r\n\r\n */\r\n#endif                                 /* ctrl_ez_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"ctrl_ez_private.h","type":"header","group":"model","path":"C:\\Users\\Angel\\Desktop\\hil\\pfc3ph\\stf7\\matlab\\ctrl_ez\\ARMCortex-M\\_ref\\ctrl_ez","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: ctrl_ez_private.h\r\n *\r\n * Code generated for Simulink model 'ctrl_ez'.\r\n *\r\n * Model version                  : 1.643\r\n * Simulink Coder version         : 24.2 (R2024b) 21-Jun-2024\r\n * C/C++ source code generated on : Sun May 11 12:39:25 2025\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objective: Execution efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef ctrl_ez_private_h_\r\n#define ctrl_ez_private_h_\r\n#include <stdbool.h>\r\n#include <stdint.h>\r\n#include \"ctrl_ez_types.h\"\r\n\r\n/* Block signals and states (default storage) for model 'ctrl_ez' */\r\ntypedef struct {\r\n  float T2[3];                         /* 'Saturation1' (':1937') */\r\n  float UnitDelay_DSTATE[3];           /* 'Unit Delay' (':831:366') */\r\n  float Delay_DSTATE[2];               /* 'Delay' (':1933') */\r\n  float I_D_CTRL_VDC;                  /* 'Saturation' (':1380') */\r\n  float Accumulator_DSTATE;            /* 'Accumulator' (':1374') */\r\n  float Accumulator_DSTATE_a;          /* 'Accumulator' (':1385') */\r\n  float Delay1_DSTATE;                 /* 'Delay1' (':1399') */\r\n  float Accumulator_DSTATE_p;          /* 'Accumulator' (':1396') */\r\n  float UnitDelay_DSTATE_f;            /* 'Unit Delay' (':1981:366') */\r\n  float Delay1_DSTATE_e;               /* 'Delay1' (':1377') */\r\n  int8_t Accumulator_PrevResetState;   /* 'Accumulator' (':1396') */\r\n  bool Memory_PreviousInput;           /* 'Memory' (':561') */\r\n} DW_ctrl_ez_f_T;\r\n\r\nextern const float rtCP_pooled_7x7Hr3MX2jW3[1002];\r\nextern const float rtCP_pooled_c9mIltOBYHuW[18];\r\n\r\n#define rtCP_sine_table_values_Value   rtCP_pooled_7x7Hr3MX2jW3  /* Computed Parameter: rtCP_sine_table_values_Value\r\n                                                                  * Referenced by: 'sine_table_values' (':2053:76:549')\r\n                                                                  */\r\n#define rtCP_sine_table_values_Value_d rtCP_pooled_7x7Hr3MX2jW3  /* Computed Parameter: rtCP_sine_table_values_Value_d\r\n                                                                  * Referenced by: 'sine_table_values' (':2056:76:549')\r\n                                                                  */\r\n#define rtCP_DirectLookupTablenD_table rtCP_pooled_c9mIltOBYHuW  /* Computed Parameter: rtCP_DirectLookupTablenD_table\r\n                                                                  * Referenced by: 'Direct Lookup Table (n-D)' (':1813')\r\n                                                                  */\r\n\r\nextern void ctrl_ez_IfActionSubsystem(float rtu_In1, float *rty_Out1);\r\nextern void ctrl_ez_IfActionSubsystem1(float rtu_In1, float *rty_Out1);\r\n\r\n/* Block states (default storage) */\r\nextern DW_ctrl_ez_f_T ctrl_ez_DW;\r\n\r\n#endif                                 /* ctrl_ez_private_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"ctrl_ez_types.h","type":"header","group":"model","path":"C:\\Users\\Angel\\Desktop\\hil\\pfc3ph\\stf7\\matlab\\ctrl_ez\\ARMCortex-M\\_ref\\ctrl_ez","tag":"","groupDisplay":"Model files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: ctrl_ez_types.h\r\n *\r\n * Code generated for Simulink model 'ctrl_ez'.\r\n *\r\n * Model version                  : 1.643\r\n * Simulink Coder version         : 24.2 (R2024b) 21-Jun-2024\r\n * C/C++ source code generated on : Sun May 11 12:39:25 2025\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex-M\r\n * Code generation objective: Execution efficiency\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef ctrl_ez_types_h_\r\n#define ctrl_ez_types_h_\r\n#endif                                 /* ctrl_ez_types_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"const_params.c","type":"source","group":"sharedutility","path":"C:\\Users\\Angel\\Desktop\\hil\\pfc3ph\\stf7\\matlab\\ctrl_ez\\ARMCortex-M\\_shared","tag":"","groupDisplay":"Shared files","code":"/*\r\n * const_params.c\r\n *\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * Code generation for model \"ctrl_ez\".\r\n *\r\n * Model version              : 1.643\r\n * Simulink Coder version : 24.2 (R2024b) 21-Jun-2024\r\n * C source code generated on : Sun May 11 12:39:25 2025\r\n */\r\n#include <stdbool.h>\r\n#include <stdint.h>\r\n\r\nextern const float rtCP_pooled_7x7Hr3MX2jW3[1002];\r\nconst float rtCP_pooled_7x7Hr3MX2jW3[1002] = { 0.0F, 0.00785390101F,\r\n  0.0157073177F, 0.023559764F, 0.0314107575F, 0.0392598175F, 0.0471064523F,\r\n  0.0549501814F, 0.0627905205F, 0.070626989F, 0.0784591F, 0.086286366F,\r\n  0.0941083133F, 0.101924457F, 0.109734312F, 0.117537394F, 0.125333235F,\r\n  0.133121341F, 0.140901238F, 0.148672432F, 0.156434461F, 0.16418685F,\r\n  0.171929106F, 0.179660752F, 0.187381312F, 0.195090324F, 0.202787295F,\r\n  0.210471764F, 0.21814324F, 0.225801274F, 0.233445361F, 0.241075054F,\r\n  0.24868989F, 0.256289363F, 0.263873041F, 0.271440446F, 0.278991103F,\r\n  0.286524564F, 0.294040322F, 0.301537961F, 0.309017F, 0.316476971F,\r\n  0.323917419F, 0.331337899F, 0.338737935F, 0.346117049F, 0.353474855F,\r\n  0.360810816F, 0.368124545F, 0.375415564F, 0.382683426F, 0.389927685F,\r\n  0.397147894F, 0.404343605F, 0.411514372F, 0.418659747F, 0.425779283F,\r\n  0.432872593F, 0.439939171F, 0.446978629F, 0.453990489F, 0.460974365F,\r\n  0.46792981F, 0.474856377F, 0.481753677F, 0.488621235F, 0.495458663F,\r\n  0.502265513F, 0.509041429F, 0.515785873F, 0.522498548F, 0.529179F,\r\n  0.535826802F, 0.542441547F, 0.549022794F, 0.555570245F, 0.562083364F,\r\n  0.568561852F, 0.575005233F, 0.581413209F, 0.587785244F, 0.594121039F,\r\n  0.600420237F, 0.60668236F, 0.612907052F, 0.619093955F, 0.625242651F,\r\n  0.631352782F, 0.637424F, 0.643455863F, 0.649448037F, 0.655400157F,\r\n  0.661311865F, 0.667182744F, 0.673012495F, 0.678800762F, 0.684547126F,\r\n  0.690251231F, 0.695912778F, 0.70153141F, 0.707106769F, 0.712638497F,\r\n  0.718126297F, 0.723569751F, 0.72896862F, 0.734322488F, 0.739631116F, 0.744894F,\r\n  0.750111043F, 0.755281806F, 0.760405958F, 0.765483201F, 0.770513237F,\r\n  0.775495768F, 0.780430436F, 0.785316944F, 0.790155F, 0.794944346F,\r\n  0.799684644F, 0.804375648F, 0.809017F, 0.813608468F, 0.818149745F,\r\n  0.822640538F, 0.827080548F, 0.831469595F, 0.835807383F, 0.840093553F,\r\n  0.844327927F, 0.848510206F, 0.852640152F, 0.856717527F, 0.860742033F,\r\n  0.86471343F, 0.868631542F, 0.872496F, 0.876306653F, 0.880063295F, 0.883765638F,\r\n  0.887413442F, 0.891006529F, 0.894544661F, 0.898027599F, 0.901455104F,\r\n  0.904827058F, 0.908143163F, 0.911403298F, 0.914607167F, 0.91775465F,\r\n  0.920845509F, 0.923879504F, 0.926856577F, 0.92977649F, 0.932639F, 0.935444057F,\r\n  0.938191354F, 0.940880775F, 0.943512142F, 0.946085334F, 0.948600173F,\r\n  0.95105654F, 0.953454196F, 0.955793F, 0.958072901F, 0.96029371F, 0.962455213F,\r\n  0.964557409F, 0.96660012F, 0.968583167F, 0.970506489F, 0.972369909F,\r\n  0.974173367F, 0.975916743F, 0.977599919F, 0.979222834F, 0.980785251F,\r\n  0.982287228F, 0.983728647F, 0.985109329F, 0.986429274F, 0.987688363F,\r\n  0.988886476F, 0.990023673F, 0.991099775F, 0.992114723F, 0.993068457F,\r\n  0.993961F, 0.994792163F, 0.995561957F, 0.996270359F, 0.996917307F,\r\n  0.997502804F, 0.998026729F, 0.998489082F, 0.998889863F, 0.999229F,\r\n  0.999506533F, 0.999722421F, 0.999876618F, 0.999969184F, 1.0F, 0.999969184F,\r\n  0.999876618F, 0.999722421F, 0.999506533F, 0.999229F, 0.998889863F,\r\n  0.998489082F, 0.998026729F, 0.997502804F, 0.996917307F, 0.996270359F,\r\n  0.995561957F, 0.994792163F, 0.993961F, 0.993068457F, 0.992114723F,\r\n  0.991099775F, 0.990023673F, 0.988886476F, 0.987688363F, 0.986429274F,\r\n  0.985109329F, 0.983728647F, 0.982287228F, 0.980785251F, 0.979222834F,\r\n  0.977599919F, 0.975916743F, 0.974173367F, 0.972369909F, 0.970506489F,\r\n  0.968583167F, 0.96660012F, 0.964557409F, 0.962455213F, 0.96029371F,\r\n  0.958072901F, 0.955793F, 0.953454196F, 0.95105654F, 0.948600173F, 0.946085334F,\r\n  0.943512142F, 0.940880775F, 0.938191354F, 0.935444057F, 0.932639F, 0.92977649F,\r\n  0.926856577F, 0.923879504F, 0.920845509F, 0.91775465F, 0.914607167F,\r\n  0.911403298F, 0.908143163F, 0.904827058F, 0.901455104F, 0.898027599F,\r\n  0.894544661F, 0.891006529F, 0.887413442F, 0.883765638F, 0.880063295F,\r\n  0.876306653F, 0.872496F, 0.868631542F, 0.86471343F, 0.860742033F, 0.856717527F,\r\n  0.852640152F, 0.848510206F, 0.844327927F, 0.840093553F, 0.835807383F,\r\n  0.831469595F, 0.827080548F, 0.822640538F, 0.818149745F, 0.813608468F,\r\n  0.809017F, 0.804375648F, 0.799684644F, 0.794944346F, 0.790155F, 0.785316944F,\r\n  0.780430436F, 0.775495768F, 0.770513237F, 0.765483201F, 0.760405958F,\r\n  0.755281806F, 0.750111043F, 0.744894F, 0.739631116F, 0.734322488F, 0.72896862F,\r\n  0.723569751F, 0.718126297F, 0.712638497F, 0.707106769F, 0.70153141F,\r\n  0.695912778F, 0.690251231F, 0.684547126F, 0.678800762F, 0.673012495F,\r\n  0.667182744F, 0.661311865F, 0.655400157F, 0.649448037F, 0.643455863F,\r\n  0.637424F, 0.631352782F, 0.625242651F, 0.619093955F, 0.612907052F, 0.60668236F,\r\n  0.600420237F, 0.594121039F, 0.587785244F, 0.581413209F, 0.575005233F,\r\n  0.568561852F, 0.562083364F, 0.555570245F, 0.549022794F, 0.542441547F,\r\n  0.535826802F, 0.529179F, 0.522498548F, 0.515785873F, 0.509041429F,\r\n  0.502265513F, 0.495458663F, 0.488621235F, 0.481753677F, 0.474856377F,\r\n  0.46792981F, 0.460974365F, 0.453990489F, 0.446978629F, 0.439939171F,\r\n  0.432872593F, 0.425779283F, 0.418659747F, 0.411514372F, 0.404343605F,\r\n  0.397147894F, 0.389927685F, 0.382683426F, 0.375415564F, 0.368124545F,\r\n  0.360810816F, 0.353474855F, 0.346117049F, 0.338737935F, 0.331337899F,\r\n  0.323917419F, 0.316476971F, 0.309017F, 0.301537961F, 0.294040322F,\r\n  0.286524564F, 0.278991103F, 0.271440446F, 0.263873041F, 0.256289363F,\r\n  0.24868989F, 0.241075054F, 0.233445361F, 0.225801274F, 0.21814324F,\r\n  0.210471764F, 0.202787295F, 0.195090324F, 0.187381312F, 0.179660752F,\r\n  0.171929106F, 0.16418685F, 0.156434461F, 0.148672432F, 0.140901238F,\r\n  0.133121341F, 0.125333235F, 0.117537394F, 0.109734312F, 0.101924457F,\r\n  0.0941083133F, 0.086286366F, 0.0784591F, 0.070626989F, 0.0627905205F,\r\n  0.0549501814F, 0.0471064523F, 0.0392598175F, 0.0314107575F, 0.023559764F,\r\n  0.0157073177F, 0.00785390101F, 1.22464685E-16F, -0.00785390101F,\r\n  -0.0157073177F, -0.023559764F, -0.0314107575F, -0.0392598175F, -0.0471064523F,\r\n  -0.0549501814F, -0.0627905205F, -0.070626989F, -0.0784591F, -0.086286366F,\r\n  -0.0941083133F, -0.101924457F, -0.109734312F, -0.117537394F, -0.125333235F,\r\n  -0.133121341F, -0.140901238F, -0.148672432F, -0.156434461F, -0.16418685F,\r\n  -0.171929106F, -0.179660752F, -0.187381312F, -0.195090324F, -0.202787295F,\r\n  -0.210471764F, -0.21814324F, -0.225801274F, -0.233445361F, -0.241075054F,\r\n  -0.24868989F, -0.256289363F, -0.263873041F, -0.271440446F, -0.278991103F,\r\n  -0.286524564F, -0.294040322F, -0.301537961F, -0.309017F, -0.316476971F,\r\n  -0.323917419F, -0.331337899F, -0.338737935F, -0.346117049F, -0.353474855F,\r\n  -0.360810816F, -0.368124545F, -0.375415564F, -0.382683426F, -0.389927685F,\r\n  -0.397147894F, -0.404343605F, -0.411514372F, -0.418659747F, -0.425779283F,\r\n  -0.432872593F, -0.439939171F, -0.446978629F, -0.453990489F, -0.460974365F,\r\n  -0.46792981F, -0.474856377F, -0.481753677F, -0.488621235F, -0.495458663F,\r\n  -0.502265513F, -0.509041429F, -0.515785873F, -0.522498548F, -0.529179F,\r\n  -0.535826802F, -0.542441547F, -0.549022794F, -0.555570245F, -0.562083364F,\r\n  -0.568561852F, -0.575005233F, -0.581413209F, -0.587785244F, -0.594121039F,\r\n  -0.600420237F, -0.60668236F, -0.612907052F, -0.619093955F, -0.625242651F,\r\n  -0.631352782F, -0.637424F, -0.643455863F, -0.649448037F, -0.655400157F,\r\n  -0.661311865F, -0.667182744F, -0.673012495F, -0.678800762F, -0.684547126F,\r\n  -0.690251231F, -0.695912778F, -0.70153141F, -0.707106769F, -0.712638497F,\r\n  -0.718126297F, -0.723569751F, -0.72896862F, -0.734322488F, -0.739631116F,\r\n  -0.744894F, -0.750111043F, -0.755281806F, -0.760405958F, -0.765483201F,\r\n  -0.770513237F, -0.775495768F, -0.780430436F, -0.785316944F, -0.790155F,\r\n  -0.794944346F, -0.799684644F, -0.804375648F, -0.809017F, -0.813608468F,\r\n  -0.818149745F, -0.822640538F, -0.827080548F, -0.831469595F, -0.835807383F,\r\n  -0.840093553F, -0.844327927F, -0.848510206F, -0.852640152F, -0.856717527F,\r\n  -0.860742033F, -0.86471343F, -0.868631542F, -0.872496F, -0.876306653F,\r\n  -0.880063295F, -0.883765638F, -0.887413442F, -0.891006529F, -0.894544661F,\r\n  -0.898027599F, -0.901455104F, -0.904827058F, -0.908143163F, -0.911403298F,\r\n  -0.914607167F, -0.91775465F, -0.920845509F, -0.923879504F, -0.926856577F,\r\n  -0.92977649F, -0.932639F, -0.935444057F, -0.938191354F, -0.940880775F,\r\n  -0.943512142F, -0.946085334F, -0.948600173F, -0.95105654F, -0.953454196F,\r\n  -0.955793F, -0.958072901F, -0.96029371F, -0.962455213F, -0.964557409F,\r\n  -0.96660012F, -0.968583167F, -0.970506489F, -0.972369909F, -0.974173367F,\r\n  -0.975916743F, -0.977599919F, -0.979222834F, -0.980785251F, -0.982287228F,\r\n  -0.983728647F, -0.985109329F, -0.986429274F, -0.987688363F, -0.988886476F,\r\n  -0.990023673F, -0.991099775F, -0.992114723F, -0.993068457F, -0.993961F,\r\n  -0.994792163F, -0.995561957F, -0.996270359F, -0.996917307F, -0.997502804F,\r\n  -0.998026729F, -0.998489082F, -0.998889863F, -0.999229F, -0.999506533F,\r\n  -0.999722421F, -0.999876618F, -0.999969184F, -1.0F, -0.999969184F,\r\n  -0.999876618F, -0.999722421F, -0.999506533F, -0.999229F, -0.998889863F,\r\n  -0.998489082F, -0.998026729F, -0.997502804F, -0.996917307F, -0.996270359F,\r\n  -0.995561957F, -0.994792163F, -0.993961F, -0.993068457F, -0.992114723F,\r\n  -0.991099775F, -0.990023673F, -0.988886476F, -0.987688363F, -0.986429274F,\r\n  -0.985109329F, -0.983728647F, -0.982287228F, -0.980785251F, -0.979222834F,\r\n  -0.977599919F, -0.975916743F, -0.974173367F, -0.972369909F, -0.970506489F,\r\n  -0.968583167F, -0.96660012F, -0.964557409F, -0.962455213F, -0.96029371F,\r\n  -0.958072901F, -0.955793F, -0.953454196F, -0.95105654F, -0.948600173F,\r\n  -0.946085334F, -0.943512142F, -0.940880775F, -0.938191354F, -0.935444057F,\r\n  -0.932639F, -0.92977649F, -0.926856577F, -0.923879504F, -0.920845509F,\r\n  -0.91775465F, -0.914607167F, -0.911403298F, -0.908143163F, -0.904827058F,\r\n  -0.901455104F, -0.898027599F, -0.894544661F, -0.891006529F, -0.887413442F,\r\n  -0.883765638F, -0.880063295F, -0.876306653F, -0.872496F, -0.868631542F,\r\n  -0.86471343F, -0.860742033F, -0.856717527F, -0.852640152F, -0.848510206F,\r\n  -0.844327927F, -0.840093553F, -0.835807383F, -0.831469595F, -0.827080548F,\r\n  -0.822640538F, -0.818149745F, -0.813608468F, -0.809017F, -0.804375648F,\r\n  -0.799684644F, -0.794944346F, -0.790155F, -0.785316944F, -0.780430436F,\r\n  -0.775495768F, -0.770513237F, -0.765483201F, -0.760405958F, -0.755281806F,\r\n  -0.750111043F, -0.744894F, -0.739631116F, -0.734322488F, -0.72896862F,\r\n  -0.723569751F, -0.718126297F, -0.712638497F, -0.707106769F, -0.70153141F,\r\n  -0.695912778F, -0.690251231F, -0.684547126F, -0.678800762F, -0.673012495F,\r\n  -0.667182744F, -0.661311865F, -0.655400157F, -0.649448037F, -0.643455863F,\r\n  -0.637424F, -0.631352782F, -0.625242651F, -0.619093955F, -0.612907052F,\r\n  -0.60668236F, -0.600420237F, -0.594121039F, -0.587785244F, -0.581413209F,\r\n  -0.575005233F, -0.568561852F, -0.562083364F, -0.555570245F, -0.549022794F,\r\n  -0.542441547F, -0.535826802F, -0.529179F, -0.522498548F, -0.515785873F,\r\n  -0.509041429F, -0.502265513F, -0.495458663F, -0.488621235F, -0.481753677F,\r\n  -0.474856377F, -0.46792981F, -0.460974365F, -0.453990489F, -0.446978629F,\r\n  -0.439939171F, -0.432872593F, -0.425779283F, -0.418659747F, -0.411514372F,\r\n  -0.404343605F, -0.397147894F, -0.389927685F, -0.382683426F, -0.375415564F,\r\n  -0.368124545F, -0.360810816F, -0.353474855F, -0.346117049F, -0.338737935F,\r\n  -0.331337899F, -0.323917419F, -0.316476971F, -0.309017F, -0.301537961F,\r\n  -0.294040322F, -0.286524564F, -0.278991103F, -0.271440446F, -0.263873041F,\r\n  -0.256289363F, -0.24868989F, -0.241075054F, -0.233445361F, -0.225801274F,\r\n  -0.21814324F, -0.210471764F, -0.202787295F, -0.195090324F, -0.187381312F,\r\n  -0.179660752F, -0.171929106F, -0.16418685F, -0.156434461F, -0.148672432F,\r\n  -0.140901238F, -0.133121341F, -0.125333235F, -0.117537394F, -0.109734312F,\r\n  -0.101924457F, -0.0941083133F, -0.086286366F, -0.0784591F, -0.070626989F,\r\n  -0.0627905205F, -0.0549501814F, -0.0471064523F, -0.0392598175F, -0.0314107575F,\r\n  -0.023559764F, -0.0157073177F, -0.00785390101F, -2.44929371E-16F,\r\n  0.00785390101F, 0.0157073177F, 0.023559764F, 0.0314107575F, 0.0392598175F,\r\n  0.0471064523F, 0.0549501814F, 0.0627905205F, 0.070626989F, 0.0784591F,\r\n  0.086286366F, 0.0941083133F, 0.101924457F, 0.109734312F, 0.117537394F,\r\n  0.125333235F, 0.133121341F, 0.140901238F, 0.148672432F, 0.156434461F,\r\n  0.16418685F, 0.171929106F, 0.179660752F, 0.187381312F, 0.195090324F,\r\n  0.202787295F, 0.210471764F, 0.21814324F, 0.225801274F, 0.233445361F,\r\n  0.241075054F, 0.24868989F, 0.256289363F, 0.263873041F, 0.271440446F,\r\n  0.278991103F, 0.286524564F, 0.294040322F, 0.301537961F, 0.309017F,\r\n  0.316476971F, 0.323917419F, 0.331337899F, 0.338737935F, 0.346117049F,\r\n  0.353474855F, 0.360810816F, 0.368124545F, 0.375415564F, 0.382683426F,\r\n  0.389927685F, 0.397147894F, 0.404343605F, 0.411514372F, 0.418659747F,\r\n  0.425779283F, 0.432872593F, 0.439939171F, 0.446978629F, 0.453990489F,\r\n  0.460974365F, 0.46792981F, 0.474856377F, 0.481753677F, 0.488621235F,\r\n  0.495458663F, 0.502265513F, 0.509041429F, 0.515785873F, 0.522498548F,\r\n  0.529179F, 0.535826802F, 0.542441547F, 0.549022794F, 0.555570245F,\r\n  0.562083364F, 0.568561852F, 0.575005233F, 0.581413209F, 0.587785244F,\r\n  0.594121039F, 0.600420237F, 0.60668236F, 0.612907052F, 0.619093955F,\r\n  0.625242651F, 0.631352782F, 0.637424F, 0.643455863F, 0.649448037F,\r\n  0.655400157F, 0.661311865F, 0.667182744F, 0.673012495F, 0.678800762F,\r\n  0.684547126F, 0.690251231F, 0.695912778F, 0.70153141F, 0.707106769F,\r\n  0.712638497F, 0.718126297F, 0.723569751F, 0.72896862F, 0.734322488F,\r\n  0.739631116F, 0.744894F, 0.750111043F, 0.755281806F, 0.760405958F,\r\n  0.765483201F, 0.770513237F, 0.775495768F, 0.780430436F, 0.785316944F,\r\n  0.790155F, 0.794944346F, 0.799684644F, 0.804375648F, 0.809017F, 0.813608468F,\r\n  0.818149745F, 0.822640538F, 0.827080548F, 0.831469595F, 0.835807383F,\r\n  0.840093553F, 0.844327927F, 0.848510206F, 0.852640152F, 0.856717527F,\r\n  0.860742033F, 0.86471343F, 0.868631542F, 0.872496F, 0.876306653F, 0.880063295F,\r\n  0.883765638F, 0.887413442F, 0.891006529F, 0.894544661F, 0.898027599F,\r\n  0.901455104F, 0.904827058F, 0.908143163F, 0.911403298F, 0.914607167F,\r\n  0.91775465F, 0.920845509F, 0.923879504F, 0.926856577F, 0.92977649F, 0.932639F,\r\n  0.935444057F, 0.938191354F, 0.940880775F, 0.943512142F, 0.946085334F,\r\n  0.948600173F, 0.95105654F, 0.953454196F, 0.955793F, 0.958072901F, 0.96029371F,\r\n  0.962455213F, 0.964557409F, 0.96660012F, 0.968583167F, 0.970506489F,\r\n  0.972369909F, 0.974173367F, 0.975916743F, 0.977599919F, 0.979222834F,\r\n  0.980785251F, 0.982287228F, 0.983728647F, 0.985109329F, 0.986429274F,\r\n  0.987688363F, 0.988886476F, 0.990023673F, 0.991099775F, 0.992114723F,\r\n  0.993068457F, 0.993961F, 0.994792163F, 0.995561957F, 0.996270359F,\r\n  0.996917307F, 0.997502804F, 0.998026729F, 0.998489082F, 0.998889863F,\r\n  0.999229F, 0.999506533F, 0.999722421F, 0.999876618F, 0.999969184F, 1.0F,\r\n  0.999969184F } ;\r\n\r\nextern const float rtCP_pooled_c9mIltOBYHuW[18];\r\nconst float rtCP_pooled_c9mIltOBYHuW[18] = { 3.0F, 2.0F, 1.0F, 2.0F, 3.0F, 1.0F,\r\n  1.0F, 3.0F, 2.0F, 1.0F, 2.0F, 3.0F, 2.0F, 1.0F, 3.0F, 3.0F, 1.0F, 2.0F } ;\r\n"},{"name":"intrp1d_fu32fl.c","type":"source","group":"sharedutility","path":"C:\\Users\\Angel\\Desktop\\hil\\pfc3ph\\stf7\\matlab\\ctrl_ez\\ARMCortex-M\\_shared","tag":"","groupDisplay":"Shared files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: intrp1d_fu32fl.c\r\n *\r\n * Code generated for Simulink model 'ctrl_ez'.\r\n *\r\n * Model version                  : 1.643\r\n * Simulink Coder version         : 24.2 (R2024b) 21-Jun-2024\r\n * C/C++ source code generated on : Sun May 11 12:39:25 2025\r\n */\r\n\r\n#include \"intrp1d_fu32fl.h\"\r\n#include <stdint.h>\r\n\r\nfloat intrp1d_fu32fl(uint32_t bpIndex, float frac, const float table[])\r\n{\r\n  float yL_0d0;\r\n\r\n  /* Column-major Interpolation 1-D\r\n     Interpolation method: 'Linear point-slope'\r\n     Use last breakpoint for index at or above upper limit: 'off'\r\n     Overflow mode: 'wrapping'\r\n   */\r\n  yL_0d0 = table[bpIndex];\r\n  return (table[bpIndex + 1U] - yL_0d0) * frac + yL_0d0;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"intrp1d_fu32fl.h","type":"header","group":"sharedutility","path":"C:\\Users\\Angel\\Desktop\\hil\\pfc3ph\\stf7\\matlab\\ctrl_ez\\ARMCortex-M\\_shared","tag":"","groupDisplay":"Shared files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: intrp1d_fu32fl.h\r\n *\r\n * Code generated for Simulink model 'ctrl_ez'.\r\n *\r\n * Model version                  : 1.643\r\n * Simulink Coder version         : 24.2 (R2024b) 21-Jun-2024\r\n * C/C++ source code generated on : Sun May 11 12:39:25 2025\r\n */\r\n\r\n#ifndef intrp1d_fu32fl_h_\r\n#define intrp1d_fu32fl_h_\r\n#include <stdbool.h>\r\n#include <stdint.h>\r\n\r\nextern float intrp1d_fu32fl(uint32_t bpIndex, float frac, const float table[]);\r\n\r\n#endif                                 /* intrp1d_fu32fl_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"plook_u32ff_evenc.c","type":"source","group":"sharedutility","path":"C:\\Users\\Angel\\Desktop\\hil\\pfc3ph\\stf7\\matlab\\ctrl_ez\\ARMCortex-M\\_shared","tag":"","groupDisplay":"Shared files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: plook_u32ff_evenc.c\r\n *\r\n * Code generated for Simulink model 'ctrl_ez'.\r\n *\r\n * Model version                  : 1.643\r\n * Simulink Coder version         : 24.2 (R2024b) 21-Jun-2024\r\n * C/C++ source code generated on : Sun May 11 12:39:25 2025\r\n */\r\n\r\n#include \"plook_u32ff_evenc.h\"\r\n#include <stdint.h>\r\n\r\nuint32_t plook_u32ff_evenc(float u, float bp0, float bpSpace, uint32_t maxIndex,\r\n  float *fraction)\r\n{\r\n  float fbpIndex;\r\n  float invSpc;\r\n  uint32_t bpIndex;\r\n\r\n  /* Prelookup - Index and Fraction\r\n     Index Search method: 'even'\r\n     Extrapolation method: 'Clip'\r\n     Use previous index: 'off'\r\n     Use last breakpoint for index at or above upper limit: 'off'\r\n     Remove protection against out-of-range input in generated code: 'off'\r\n   */\r\n  if (u <= bp0) {\r\n    bpIndex = 0U;\r\n    *fraction = 0.0F;\r\n  } else {\r\n    invSpc = 1.0F / bpSpace;\r\n    fbpIndex = (u - bp0) * invSpc;\r\n    if (fbpIndex < maxIndex) {\r\n      bpIndex = (uint32_t)fbpIndex;\r\n      *fraction = (u - ((float)(uint32_t)fbpIndex * bpSpace + bp0)) * invSpc;\r\n    } else {\r\n      bpIndex = maxIndex - 1U;\r\n      *fraction = 1.0F;\r\n    }\r\n  }\r\n\r\n  return bpIndex;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"plook_u32ff_evenc.h","type":"header","group":"sharedutility","path":"C:\\Users\\Angel\\Desktop\\hil\\pfc3ph\\stf7\\matlab\\ctrl_ez\\ARMCortex-M\\_shared","tag":"","groupDisplay":"Shared files","code":"/*\r\n * Academic License - for use in teaching, academic research, and meeting\r\n * course requirements at degree granting institutions only.  Not for\r\n * government, commercial, or other organizational use.\r\n *\r\n * File: plook_u32ff_evenc.h\r\n *\r\n * Code generated for Simulink model 'ctrl_ez'.\r\n *\r\n * Model version                  : 1.643\r\n * Simulink Coder version         : 24.2 (R2024b) 21-Jun-2024\r\n * C/C++ source code generated on : Sun May 11 12:39:25 2025\r\n */\r\n\r\n#ifndef plook_u32ff_evenc_h_\r\n#define plook_u32ff_evenc_h_\r\n#include <stdbool.h>\r\n#include <stdint.h>\r\n\r\nextern uint32_t plook_u32ff_evenc(float u, float bp0, float bpSpace, uint32_t\r\n  maxIndex, float *fraction);\r\n\r\n#endif                                 /* plook_u32ff_evenc_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"coverage":[{"id":"SimulinkCoverage","name":"Simulink Coverage","files":[]},{"id":"Bullseye","name":"Bullseye Coverage","files":[]},{"id":"LDRA","name":"LDRA Testbed","files":[]}],"features":{"annotation":false,"coverage":true,"profiling":true,"tooltip":true,"coverageTooltip":true,"showJustificationLinks":true,"useMWTable":false,"showProfilingInfo":true,"showTaskSummary":true,"showProtectedV2Report":true}};