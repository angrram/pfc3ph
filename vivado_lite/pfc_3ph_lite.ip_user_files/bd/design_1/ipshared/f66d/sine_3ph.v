// -------------------------------------------------------------
// 
// File Name: sine_gen2\sine_gen\sine_3ph.v
// Created: 2025-02-17 19:39:10
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 2.12766e-07
// Target subsystem base rate: 0.000212766
// Explicit user oversample request: 1000x
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        0.000212766
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// out_vc                        ce_out        0.000212766
// out_vb                        ce_out        0.000212766
// alphaout_va                   ce_out        0.000212766
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: sine_3ph
// Source Path: sine_gen/sine_3ph
// Hierarchy Level: 0
// Model version: 1.19
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module sine_3ph
          (clk,
           reset,
           clk_enable,
           ce_out,
           out_vc,
           out_vb,
           alphaout_va);


  input   clk;
  input   reset;
  input   clk_enable;
  output  ce_out;
  output  signed [17:0] out_vc;  // sfix18_En8
  output  signed [17:0] out_vb;  // sfix18_En8
  output  signed [17:0] alphaout_va;  // sfix18_En8


  wire enb_1_1000_0;
  wire enb_1_1000_1;
  wire enb;
  wire signed [17:0] vc_out1;  // sfix18_En8
  reg signed [17:0] Delay2_out1;  // sfix18_En8
  wire signed [17:0] vb_out1;  // sfix18_En8
  reg signed [17:0] Delay1_out1;  // sfix18_En8
  wire signed [17:0] va_out1;  // sfix18_En8
  reg signed [17:0] Delay_out1;  // sfix18_En8


  sine_3ph_tc u_sine_3ph_tc (.clk(clk),
                             .reset(reset),
                             .clk_enable(clk_enable),
                             .enb(enb),
                             .enb_1_1000_0(enb_1_1000_0),
                             .enb_1_1000_1(enb_1_1000_1)
                             );

  vc u_vc (.clk(clk),
           .reset(reset),
           .enb_1_1000_0(enb_1_1000_0),
           .Sine_Wave_out1(vc_out1)  // sfix18_En8
           );

  always @(posedge clk)
    begin : Delay2_process
      if (reset == 1'b1) begin
        Delay2_out1 <= 18'sb000000000000000000;
      end
      else begin
        if (enb_1_1000_0) begin
          Delay2_out1 <= vc_out1;
        end
      end
    end

  assign out_vc = Delay2_out1;

  vb u_vb (.clk(clk),
           .reset(reset),
           .enb_1_1000_0(enb_1_1000_0),
           .Sine_Wave_out1(vb_out1)  // sfix18_En8
           );

  always @(posedge clk)
    begin : Delay1_process
      if (reset == 1'b1) begin
        Delay1_out1 <= 18'sb000000000000000000;
      end
      else begin
        if (enb_1_1000_0) begin
          Delay1_out1 <= vb_out1;
        end
      end
    end

  assign out_vb = Delay1_out1;

  va u_va (.clk(clk),
           .reset(reset),
           .enb_1_1000_0(enb_1_1000_0),
           .Sine_Wave_out1(va_out1)  // sfix18_En8
           );

  always @(posedge clk)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_out1 <= 18'sb000000000000000000;
      end
      else begin
        if (enb_1_1000_0) begin
          Delay_out1 <= va_out1;
        end
      end
    end

  assign alphaout_va = Delay_out1;

  assign ce_out = enb_1_1000_1;

endmodule  // sine_3ph

