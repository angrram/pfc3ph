// -------------------------------------------------------------
// 
// File Name: C:\Users\Angel\Desktop\hil\ips\MCP_DRIVER\hdlsrc\int2bin_sdi\simfcn1.v
// Created: 2025-05-12 19:25:22
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: simfcn1
// Source Path: 
// Hierarchy Level: 2
// Model version: 3.159
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module simfcn1
          (vx,
           cont_bits2_0,
           cont_bits2_1,
           cont_bits2_2,
           cont_bits2_3,
           cont_bits2_4,
           cont_bits2_5,
           cont_bits2_6,
           cont_bits2_7,
           cont_bits2_8,
           cont_bits2_9,
           cont_bits2_10,
           cont_bits2_11);


  input   [15:0] vx;  // uint16
  output  cont_bits2_0;  // boolean
  output  cont_bits2_1;  // boolean
  output  cont_bits2_2;  // boolean
  output  cont_bits2_3;  // boolean
  output  cont_bits2_4;  // boolean
  output  cont_bits2_5;  // boolean
  output  cont_bits2_6;  // boolean
  output  cont_bits2_7;  // boolean
  output  cont_bits2_8;  // boolean
  output  cont_bits2_9;  // boolean
  output  cont_bits2_10;  // boolean
  output  cont_bits2_11;  // boolean


  wire signed [31:0] s;  // int32
  wire signed [31:0] s_1;  // int32
  wire signed [31:0] s_2;  // int32
  wire signed [31:0] s_3;  // int32
  wire signed [31:0] s_4;  // int32
  wire signed [31:0] s_5;  // int32
  wire signed [31:0] s_6;  // int32
  wire signed [31:0] s_7;  // int32
  wire signed [31:0] s_8;  // int32
  wire signed [31:0] s_9;  // int32
  wire signed [31:0] s_10;  // int32
  wire signed [31:0] s_11;  // int32
  wire signed [31:0] tmp;  // int32
  wire signed [31:0] tmp_1;  // int32
  wire [15:0] tmp_2;  // uint16
  wire signed [31:0] tmp_3;  // int32
  wire [15:0] tmp_4;  // uint16
  wire tmp_5;
  wire signed [31:0] tmp_6;  // int32
  wire signed [31:0] tmp_7;  // int32
  wire [15:0] tmp_8;  // uint16
  wire signed [31:0] tmp_9;  // int32
  wire signed [31:0] tmp_10;  // int32
  wire [15:0] tmp_11;  // uint16
  wire tmp_12;
  wire signed [31:0] tmp_13;  // int32
  wire signed [31:0] tmp_14;  // int32
  wire [15:0] tmp_15;  // uint16
  wire signed [31:0] tmp_16;  // int32
  wire signed [31:0] tmp_17;  // int32
  wire [15:0] tmp_18;  // uint16
  wire tmp_19;
  wire signed [31:0] tmp_20;  // int32
  wire signed [31:0] tmp_21;  // int32
  wire [15:0] tmp_22;  // uint16
  wire signed [31:0] tmp_23;  // int32
  wire signed [31:0] tmp_24;  // int32
  wire [15:0] tmp_25;  // uint16
  wire tmp_26;
  wire signed [31:0] tmp_27;  // int32
  wire signed [31:0] tmp_28;  // int32
  wire [15:0] tmp_29;  // uint16
  wire signed [31:0] tmp_30;  // int32
  wire signed [31:0] tmp_31;  // int32
  wire [15:0] tmp_32;  // uint16
  wire tmp_33;
  wire signed [31:0] tmp_34;  // int32
  wire signed [31:0] tmp_35;  // int32
  wire [15:0] tmp_36;  // uint16
  wire signed [31:0] tmp_37;  // int32
  wire signed [31:0] tmp_38;  // int32
  wire [15:0] tmp_39;  // uint16
  wire tmp_40;
  wire signed [31:0] tmp_41;  // int32
  wire signed [31:0] tmp_42;  // int32
  wire [15:0] tmp_43;  // uint16
  wire signed [31:0] tmp_44;  // int32
  wire signed [31:0] tmp_45;  // int32
  wire [15:0] tmp_46;  // uint16
  wire tmp_47;
  wire signed [31:0] tmp_48;  // int32
  wire signed [31:0] tmp_49;  // int32
  wire [15:0] tmp_50;  // uint16
  wire signed [31:0] tmp_51;  // int32
  wire signed [31:0] tmp_52;  // int32
  wire [15:0] tmp_53;  // uint16
  wire tmp_54;
  wire signed [31:0] tmp_55;  // int32
  wire signed [31:0] tmp_56;  // int32
  wire [15:0] tmp_57;  // uint16
  wire signed [31:0] tmp_58;  // int32
  wire signed [31:0] tmp_59;  // int32
  wire [15:0] tmp_60;  // uint16
  wire tmp_61;
  wire signed [31:0] tmp_62;  // int32
  wire signed [31:0] tmp_63;  // int32
  wire [15:0] tmp_64;  // uint16
  wire signed [31:0] tmp_65;  // int32
  wire signed [31:0] tmp_66;  // int32
  wire [15:0] tmp_67;  // uint16
  wire tmp_68;
  wire signed [31:0] tmp_69;  // int32
  wire signed [31:0] tmp_70;  // int32
  wire [15:0] tmp_71;  // uint16
  wire signed [31:0] tmp_72;  // int32
  wire signed [31:0] tmp_73;  // int32
  wire [15:0] tmp_74;  // uint16
  wire tmp_75;
  wire signed [31:0] tmp_76;  // int32
  wire signed [31:0] tmp_77;  // int32
  wire [15:0] tmp_78;  // uint16
  wire signed [31:0] tmp_79;  // int32
  wire signed [31:0] tmp_80;  // int32
  wire [15:0] tmp_81;  // uint16
  wire tmp_82;
  wire [11:0] cont_bits2;  // boolean [12]


  // MATLAB Function 'simfcn1'
  // cont_bits2 = int2bit(vx,12,1);
  assign s = 32'sd1;
  assign s_1 = 32'sd2;
  assign s_2 = 32'sd4;
  assign s_3 = 32'sd8;
  assign s_4 = 32'sd16;
  assign s_5 = 32'sd32;
  assign s_6 = 32'sd64;
  assign s_7 = 32'sd128;
  assign s_8 = 32'sd256;
  assign s_9 = 32'sd512;
  assign s_10 = 32'sd1024;
  assign s_11 = 32'sd2048;
  assign tmp = {16'b0, vx};

  assign tmp_1 = s & tmp;

  assign tmp_2 = tmp_1[15:0];

  assign tmp_3 = {16'b0, tmp_2};

  assign tmp_4 = tmp_3[15:0];

  assign tmp_5 = (tmp_4 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign tmp_6 = {16'b0, vx};

  assign tmp_7 = s_1 & tmp_6;

  assign tmp_8 = tmp_7[15:0];

  assign tmp_9 = {16'b0, tmp_8};

  assign tmp_10 = tmp_9 >>> 32'sd1;

  assign tmp_11 = tmp_10[15:0];

  assign tmp_12 = (tmp_11 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign tmp_13 = {16'b0, vx};

  assign tmp_14 = s_2 & tmp_13;

  assign tmp_15 = tmp_14[15:0];

  assign tmp_16 = {16'b0, tmp_15};

  assign tmp_17 = tmp_16 >>> 32'sd2;

  assign tmp_18 = tmp_17[15:0];

  assign tmp_19 = (tmp_18 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign tmp_20 = {16'b0, vx};

  assign tmp_21 = s_3 & tmp_20;

  assign tmp_22 = tmp_21[15:0];

  assign tmp_23 = {16'b0, tmp_22};

  assign tmp_24 = tmp_23 >>> 32'sd3;

  assign tmp_25 = tmp_24[15:0];

  assign tmp_26 = (tmp_25 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign tmp_27 = {16'b0, vx};

  assign tmp_28 = s_4 & tmp_27;

  assign tmp_29 = tmp_28[15:0];

  assign tmp_30 = {16'b0, tmp_29};

  assign tmp_31 = tmp_30 >>> 32'sd4;

  assign tmp_32 = tmp_31[15:0];

  assign tmp_33 = (tmp_32 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign tmp_34 = {16'b0, vx};

  assign tmp_35 = s_5 & tmp_34;

  assign tmp_36 = tmp_35[15:0];

  assign tmp_37 = {16'b0, tmp_36};

  assign tmp_38 = tmp_37 >>> 32'sd5;

  assign tmp_39 = tmp_38[15:0];

  assign tmp_40 = (tmp_39 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign tmp_41 = {16'b0, vx};

  assign tmp_42 = s_6 & tmp_41;

  assign tmp_43 = tmp_42[15:0];

  assign tmp_44 = {16'b0, tmp_43};

  assign tmp_45 = tmp_44 >>> 32'sd6;

  assign tmp_46 = tmp_45[15:0];

  assign tmp_47 = (tmp_46 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign tmp_48 = {16'b0, vx};

  assign tmp_49 = s_7 & tmp_48;

  assign tmp_50 = tmp_49[15:0];

  assign tmp_51 = {16'b0, tmp_50};

  assign tmp_52 = tmp_51 >>> 32'sd7;

  assign tmp_53 = tmp_52[15:0];

  assign tmp_54 = (tmp_53 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign tmp_55 = {16'b0, vx};

  assign tmp_56 = s_8 & tmp_55;

  assign tmp_57 = tmp_56[15:0];

  assign tmp_58 = {16'b0, tmp_57};

  assign tmp_59 = tmp_58 >>> 32'sd8;

  assign tmp_60 = tmp_59[15:0];

  assign tmp_61 = (tmp_60 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign tmp_62 = {16'b0, vx};

  assign tmp_63 = s_9 & tmp_62;

  assign tmp_64 = tmp_63[15:0];

  assign tmp_65 = {16'b0, tmp_64};

  assign tmp_66 = tmp_65 >>> 32'sd9;

  assign tmp_67 = tmp_66[15:0];

  assign tmp_68 = (tmp_67 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign tmp_69 = {16'b0, vx};

  assign tmp_70 = s_10 & tmp_69;

  assign tmp_71 = tmp_70[15:0];

  assign tmp_72 = {16'b0, tmp_71};

  assign tmp_73 = tmp_72 >>> 32'sd10;

  assign tmp_74 = tmp_73[15:0];

  assign tmp_75 = (tmp_74 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign tmp_76 = {16'b0, vx};

  assign tmp_77 = s_11 & tmp_76;

  assign tmp_78 = tmp_77[15:0];

  assign tmp_79 = {16'b0, tmp_78};

  assign tmp_80 = tmp_79 >>> 32'sd11;

  assign tmp_81 = tmp_80[15:0];

  assign tmp_82 = (tmp_81 != 16'b0000000000000000 ? 1'b1 :
              1'b0);

  assign cont_bits2[0] = tmp_82;
  assign cont_bits2[1] = tmp_75;
  assign cont_bits2[2] = tmp_68;
  assign cont_bits2[3] = tmp_61;
  assign cont_bits2[4] = tmp_54;
  assign cont_bits2[5] = tmp_47;
  assign cont_bits2[6] = tmp_40;
  assign cont_bits2[7] = tmp_33;
  assign cont_bits2[8] = tmp_26;
  assign cont_bits2[9] = tmp_19;
  assign cont_bits2[10] = tmp_12;
  assign cont_bits2[11] = tmp_5;

  assign cont_bits2_0 = cont_bits2[0];

  assign cont_bits2_1 = cont_bits2[1];

  assign cont_bits2_2 = cont_bits2[2];

  assign cont_bits2_3 = cont_bits2[3];

  assign cont_bits2_4 = cont_bits2[4];

  assign cont_bits2_5 = cont_bits2[5];

  assign cont_bits2_6 = cont_bits2[6];

  assign cont_bits2_7 = cont_bits2[7];

  assign cont_bits2_8 = cont_bits2[8];

  assign cont_bits2_9 = cont_bits2[9];

  assign cont_bits2_10 = cont_bits2[10];

  assign cont_bits2_11 = cont_bits2[11];

endmodule  // simfcn1

